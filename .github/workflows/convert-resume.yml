const mammoth = require('mammoth');
const fs = require('fs').promises;
const path = require('path');

async function convertResumeToHTML() {
    try {
        console.log('🔄 Converting resume.docx to HTML...');
        
        // Read and convert DOCX file
        const result = await mammoth.convertToHtml({path: './resume.docx'});
        const htmlContent = result.value;
        
        // Enhanced HTML template with modern styling and interactivity
        const completeHTML = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Punit Makhija - Interactive Resume</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .resume-container {
            max-width: 1000px;
            margin: 0 auto;
            background: white;
            box-shadow: 0 0 50px rgba(0,0,0,0.2);
            animation: slideIn 0.8s ease-out;
        }
        
        @keyframes slideIn {
            from { opacity: 0; transform: translateY(50px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .header {
            background: linear-gradient(135deg, #2c3e50, #3498db);
            color: white;
            padding: 60px 40px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
            animation: shimmer 3s infinite;
        }
        
        @keyframes shimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }
        
        .header h1 {
            font-size: 3rem;
            margin-bottom: 15px;
            position: relative;
            z-index: 2;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .contact-info {
            display: flex;
            justify-content: center;
            gap: 30px;
            flex-wrap: wrap;
            position: relative;
            z-index: 2;
            font-size: 1.1rem;
        }
        
        .contact-item {
            display: flex;
            align-items: center;
            gap: 8px;
            transition: transform 0.3s ease;
            cursor: pointer;
        }
        
        .contact-item:hover {
            transform: translateY(-3px);
        }
        
        .nav-tabs {
            display: flex;
            background: #34495e;
            overflow-x: auto;
        }
        
        .nav-tab {
            padding: 15px 25px;
            background: none;
            border: none;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            white-space: nowrap;
            border-bottom: 3px solid transparent;
        }
        
        .nav-tab:hover, .nav-tab.active {
            background: rgba(255,255,255,0.1);
            border-bottom-color: #3498db;
        }
        
        .content {
            padding: 40px;
        }
        
        .tab-content {
            display: none;
            animation: fadeIn 0.5s ease-in;
        }
        
        .tab-content.active {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .section {
            margin-bottom: 30px;
        }
        
        .section h2 {
            color: #2c3e50;
            font-size: 1.8rem;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #3498db;
            position: relative;
        }
        
        .experience-item {
            background: #f8f9fa;
            padding: 25px;
            margin-bottom: 20px;
            border-radius: 10px;
            border-left: 4px solid #3498db;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .experience-item:hover {
            transform: translateX(10px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        }
        
        .job-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .job-title {
            font-size: 1.3rem;
            font-weight: bold;
            color: #2c3e50;
        }
        
        .company {
            color: #3498db;
            font-weight: 600;
            font-size: 1.1rem;
        }
        
        .duration {
            background: #3498db;
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
        }
        
        .skills-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .skill-category {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            padding: 20px;
            border-radius: 10px;
            border-top: 4px solid #3498db;
        }
        
        .skill-category h3 {
            color: #2c3e50;
            margin-bottom: 15px;
            font-size: 1.2rem;
        }
        
        .skill-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }
        
        .skill-tag {
            background: #3498db;
            color: white;
            padding: 5px 12px;
            border-radius: 15px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }
        
        .skill-tag:hover {
            background: #2980b9;
            transform: scale(1.05);
        }
        
        .download-section {
            text-align: center;
            padding: 30px;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 15px;
            margin-top: 30px;
        }
        
        .download-btn {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 50px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
        }
        
        .download-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(52, 152, 219, 0.4);
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }
        
        .stat-card {
            background: white;
            padding: 30px 20px;
            text-align: center;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
        }
        
        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #3498db;
            display: block;
        }
        
        .stat-label {
            color: #7f8c8d;
            margin-top: 5px;
        }
        
        @media (max-width: 768px) {
            .header h1 { font-size: 2rem; }
            .contact-info { flex-direction: column; gap: 15px; }
            .content { padding: 20px; }
            .job-header { flex-direction: column; }
            .nav-tabs { flex-wrap: wrap; }
        }
        
        .progress-bar {
            width: 100%;
            height: 6px;
            background: #ecf0f1;
            border-radius: 3px;
            overflow: hidden;
            margin: 5px 0;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #3498db, #2980b9);
            border-radius: 3px;
            animation: fillProgress 2s ease-out;
        }
        
        @keyframes fillProgress {
            from { width: 0%; }
        }
    </style>
</head>
<body>
    <div class="resume-container">
        <header class="header">
            <h1>Punit Makhija</h1>
            <div class="contact-info">
                <div class="contact-item" onclick="copyToClipboard('571-451-6076')">
                    <i class="fas fa-phone"></i>
                    <span>571-451-6076</span>
                </div>
                <div class="contact-item" onclick="copyToClipboard('Punit.Makhija1@gmail.com')">
                    <i class="fas fa-envelope"></i>
                    <span>Punit.Makhija1@gmail.com</span>
                </div>
                <div class="contact-item">
                    <i class="fas fa-flag-usa"></i>
                    <span>US Citizen</span>
                </div>
            </div>
        </header>
        
        <nav class="nav-tabs">
            <button class="nav-tab active" onclick="showTab(event, 'summary')">
                <i class="fas fa-user"></i> Summary
            </button>
            <button class="nav-tab" onclick="showTab(event, 'experience')">
                <i class="fas fa-briefcase"></i> Experience
            </button>
            <button class="nav-tab" onclick="showTab(event, 'skills')">
                <i class="fas fa-code"></i> Skills
            </button>
            <button class="nav-tab" onclick="showTab(event, 'education')">
                <i class="fas fa-graduation-cap"></i> Education
            </button>
        </nav>
        
        <div class="content">
            <div id="summary" class="tab-content active">
                <div class="stats-grid">
                    <div class="stat-card">
                        <span class="stat-number">11+</span>
                        <span class="stat-label">Years Experience</span>
                    </div>
                    <div class="stat-card">
                        <span class="stat-number">30+</span>
                        <span class="stat-label">Requisitions Handled</span>
                    </div>
                    <div class="stat-card">
                        <span class="stat-number">100%</span>
                        <span class="stat-label">Success Rate</span>
                    </div>
                </div>
                
                <div class="section">
                    ${htmlContent}
                </div>
            </div>
            
            <div id="experience" class="tab-content">
                <!-- Experience content will be populated by JavaScript -->
            </div>
            
            <div id="skills" class="tab-content">
                <!-- Skills content will be populated by JavaScript -->
            </div>
            
            <div id="education" class="tab-content">
                <!-- Education content will be populated by JavaScript -->
            </div>
            
            <div class="download-section">
                <h3>Download Resume</h3>
                <p>Get a copy of my resume in PDF format</p>
                <a href="./resume.docx" class="download-btn" download>
                    <i class="fas fa-download"></i>
                    Download Resume
                </a>
            </div>
        </div>
    </div>

    <script>
        function showTab(event, tabName) {
            // Hide all tab contents
            const tabContents = document.querySelectorAll('.tab-content');
            tabContents.forEach(tab => tab.classList.remove('active'));
            
            // Remove active class from all tabs
            const tabs = document.querySelectorAll('.nav-tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            
            // Show selected tab and mark button as active
            document.getElementById(tabName).classList.add('active');
            event.currentTarget.classList.add('active');
        }
        
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                // Show feedback
                const notification = document.createElement('div');
                notification.textContent = '✓ Copied to clipboard!';
                notification.style.cssText = \`
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    background: #27ae60;
                    color: white;
                    padding: 10px 20px;
                    border-radius: 25px;
                    font-weight: bold;
                    z-index: 9999;
                    animation: slideInRight 0.3s ease-out;
                \`;
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    notification.remove();
                }, 3000);
            });
        }
        
        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Add smooth scrolling
            document.documentElement.style.scrollBehavior = 'smooth';
            
            // Add loading animations
            const cards = document.querySelectorAll('.stat-card, .experience-item, .skill-category');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.animation = 'fadeIn 0.8s ease-out';
                    }
                });
            }, { threshold: 0.1 });
            
            cards.forEach(card => observer.observe(card));
        });
    </script>
</body>
</html>`;
        
        // Write the HTML file
        await fs.writeFile('./index.html', completeHTML);
        
        console.log('✅ Resume successfully converted to index.html!');
        console.log('📁 File saved as: ./index.html');
        
        if (result.messages && result.messages.length > 0) {
            console.log('⚠️  Conversion warnings:');
            result.messages.forEach(message => console.log(`   - ${message.message}`));
        }
        
    } catch (error) {
        console.error('❌ Error converting resume:', error.message);
        process.exit(1);
    }
}

// Run the conversion
convertResumeToHTML();
